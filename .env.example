# .env.example — Ev Hayvanları Pazaryeri (monorepo: Django backend + Next.js frontend)
# ---------------------------------------------------------------
# COPY THIS FILE to .env and fill real values. Do NOT commit real secrets.
# For frontend values exposed to client, use NEXT_PUBLIC_ prefix.
# Keep .env in .gitignore. In CI, set these values as repository secrets or use a secret manager.
# ---------------------------------------------------------------

# -------------------------
# App versions / compatibility (useful to track releases & ensure frontend/backend compatibility)
# -------------------------
APP_NAME=EvHayvanlari
APP_BACKEND_VERSION=0.1.0
APP_FRONTEND_VERSION=0.1.0
# Optionally enforce compatible API version between frontend/backend:
API_VERSION=v1

# -------------------------
# Environment mode and host
# -------------------------
ENV=development                   # development | staging | production
DEBUG=True                        # True for local dev, False for production
DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,example.com   # comma separated
# In CI you might temporarily allow all hosts for build containers:
# DJANGO_ALLOWED_HOSTS=*

# -------------------------
# Django / Backend security
# -------------------------
DJANGO_SECRET_KEY=change-me-to-a-strong-secret
# PRODUCTION NOTE: Inject DJANGO_SECRET_KEY from a secret manager (Vault, AWS Parameter Store, GitHub Secrets).
# Do NOT store production secret in repository or plain files.

DEFAULT_FROM_EMAIL="no-reply@example.com"
DJANGO_TIME_ZONE=UTC
DJANGO_DEFAULT_LANGUAGE=en-us

# -------------------------
# Frontend ↔ Backend API URLs
# -------------------------
# Backend (server) binds
DJANGO_HOST=0.0.0.0
DJANGO_PORT=8000

# Canonical API URL used by backend & other services (override per environment in CI)
API_URL=http://localhost:8000/api
# Client-visible API URL(s) — NEXT_PUBLIC_ vars are exposed in the browser
NEXT_PUBLIC_API_URL=http://localhost:8000/api
# You can override per environment in CI/CD:
# NEXT_PUBLIC_API_URL_STAGING=https://staging-api.evhayvanlari.com/api
# NEXT_PUBLIC_API_URL_PRODUCTION=https://api.evhayvanlari.com/api

NEXT_PUBLIC_ENV=development
NEXT_PUBLIC_PAYMENTS_STRIPE_KEY=pk_test_change_me
NEXT_PUBLIC_SENTRY_DSN=
NEXT_PUBLIC_MAPS_API_KEY=

# -------------------------
# Database (Postgres)
# -------------------------
# Prefer DATABASE_URL for 12-factor apps:
DATABASE_URL=postgres://postgres:password@localhost:5432/evhayvanlari
# Or individual fields:
DB_HOST=localhost
DB_PORT=5432
DB_NAME=evhayvanlari
DB_USER=postgres
DB_PASSWORD=password

# -------------------------
# Cache / Channels / Celery (Redis)
# -------------------------
REDIS_URL=redis://localhost:6379/0
CHANNELS_REDIS_URL=${REDIS_URL}
CELERY_BROKER_URL=${REDIS_URL}
CELERY_RESULT_BACKEND=${REDIS_URL}

# Testing convenience: in test pipeline set CELERY_TASK_ALWAYS_EAGER=True to execute tasks synchronously
CELERY_TASK_ALWAYS_EAGER=False

# -------------------------
# Storage (S3 / MinIO)
# -------------------------
AWS_ACCESS_KEY_ID=change-me
AWS_SECRET_ACCESS_KEY=change-me
AWS_STORAGE_BUCKET_NAME=evhayvanlari-media
AWS_S3_REGION_NAME=us-east-1
AWS_S3_ENDPOINT_URL=                      # e.g. http://minio:9000 (leave empty for AWS)
AWS_S3_USE_SSL=False                      # True for AWS, False for local MinIO
SIGNED_UPLOAD_EXPIRE_SECONDS=3600

# -------------------------
# Email (SendGrid / SMTP)
# -------------------------
# Production: SMTP backend with TLS/SSL
EMAIL_BACKEND=django.core.mail.backends.smtp.EmailBackend
SMTP_HOST=smtp.sendgrid.net
SMTP_PORT=587
SMTP_USER=apikey
SMTP_PASSWORD=change-sendgrid-api-key
EMAIL_FROM="EvHayvanlari <no-reply@example.com>"

# Email security flags (some Django setups require these)
EMAIL_USE_TLS=True
EMAIL_USE_SSL=False

# Local dev alternative (prints mails to console)
# EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend

# -------------------------
# Payments (Stripe)
# -------------------------
STRIPE_SECRET_KEY=sk_test_change_me
STRIPE_PUBLISHABLE_KEY=pk_test_change_me
STRIPE_WEBHOOK_SECRET=whsec_change_me
STRIPE_WEBHOOK_ENDPOINT=/webhooks/stripe/

# -------------------------
# Third-party / OAuth
# -------------------------
GOOGLE_CLIENT_ID=google-client-id.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=google-client-secret
RECAPTCHA_SITE_KEY=recaptcha-site-key
RECAPTCHA_SECRET_KEY=recaptcha-secret-key

# -------------------------
# Moderation / AI services (optional placeholders)
# -------------------------
# If you integrate image/text moderation, provide provider and key here
MODERATION_PROVIDER=none                  # none | aws_rekognition | google_vision | openai | perspective
MODERATION_API_KEY=change-me

# -------------------------
# Search (OpenSearch / Elasticsearch)
# -------------------------
OPENSEARCH_URL=http://localhost:9200
OPENSEARCH_USERNAME=
OPENSEARCH_PASSWORD=

# -------------------------
# Monitoring / Observability (future-proof)
# -------------------------
SENTRY_DSN=
OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:4317
PROMETHEUS_MULTIPROC_DIR=/tmp

# -------------------------
# Feature flags / runtime
# -------------------------
ENABLE_REDIS_CACHE=True
ENABLE_CELERY=True
ENABLE_SENTRY=False
DISABLE_EXTERNAL_APIS=False                # Set True in local/dev to block calls to 3rd-party services

# -------------------------
# Auth / Tokens / CSRF / CORS
# -------------------------
JWT_AUTH_COOKIE=access_token
JWT_AUTH_REFRESH_COOKIE=refresh_token
ACCESS_TOKEN_LIFETIME=5m
REFRESH_TOKEN_LIFETIME=7d

CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
CSRF_TRUSTED_ORIGINS=http://localhost:3000

# -------------------------
# Websockets / Channels
# -------------------------
# CHANNELS_REDIS_URL already set above (uses REDIS_URL)

# -------------------------
# CI / Docker helpers
# -------------------------
# In CI/CD, override these via secrets or environment-specific files.
# Example CI secrets you should set for production/staging:
# - DJANGO_SECRET_KEY
# - DATABASE_URL
# - STRIPE_SECRET_KEY
# - SMTP_PASSWORD
# - AWS_ACCESS_KEY_ID / AWS_SECRET_ACCESS_KEY
# - SENTRY_DSN
# - MODERATION_API_KEY

# -------------------------
# Local dev convenience (optional)
# -------------------------
DEV_SEED_ADMIN_EMAIL=admin@example.com
DEV_SEED_ADMIN_PASSWORD=adminpass

# -------------------------
# Test toggles & mocks
# -------------------------
# Useful for local test runs or CI test jobs
USE_MOCK_STORAGE=True
DISABLE_EXTERNAL_APIS=False
# When running unit tests you can enable:
# DISABLE_EXTERNAL_APIS=True
# CELERY_TASK_ALWAYS_EAGER=True

# -------------------------
# Notes & best practices (short)
# -------------------------
# - Never commit real secrets. Use secret managers for prod.
# - For frontend, prefer injecting NEXT_PUBLIC_API_URL via CI per environment.
# - Keep DEBUG=False in production and configure DJANGO_ALLOWED_HOSTS properly.
# - Rotate keys regularly (Stripe, JWT secrets, AWS keys).
# - Track backend/frontend versions (APP_BACKEND_VERSION / APP_FRONTEND_VERSION) to detect incompatibilities.
# ---------------------------------------------------------------
